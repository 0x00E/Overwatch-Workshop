variables
{
	global:
		0: postion
		1: brigtte
}

rule("1")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		Set Global Variable(postion, Empty Array);
		Set Global Variable(brigtte, Empty Array);
		Modify Global Variable(postion, Append To Array, Vector(43, 3, 8));
		Modify Global Variable(postion, Append To Array, Vector(45, 3, 10));
		Modify Global Variable(postion, Append To Array, Vector(73, -1.000, -19.000));
		Modify Global Variable(postion, Append To Array, Vector(82, -0.500, -12.000));
		Modify Global Variable(postion, Append To Array, Vector(85, -1.000, -10.000));
		Modify Global Variable(postion, Append To Array, Vector(92, -0.500, -7.200));
		Modify Global Variable(postion, Append To Array, Vector(62.229, -0.501, -2.883));
		Modify Global Variable(postion, Append To Array, Vector(71.047, -0.502, 4.399));
		Modify Global Variable(postion, Append To Array, Vector(74.310, -0.502, 6.288));
		Create Dummy Bot(Hero(Doomfist), Team 2, -1.000, Value In Array(Global Variable(postion), 0), Vector(0, 0, 0));
		Create Dummy Bot(Hero(Doomfist), Team 2, -1.000, Value In Array(Global Variable(postion), 1), Vector(0, 0, 0));
		Create Dummy Bot(Hero(Doomfist), Team 2, -1.000, Value In Array(Global Variable(postion), 2), Vector(0, 0, 0));
		Create Dummy Bot(Hero(Doomfist), Team 2, -1.000, Value In Array(Global Variable(postion), 3), Vector(0, 0, 0));
		Create Dummy Bot(Hero(Doomfist), Team 2, -1.000, Value In Array(Global Variable(postion), 4), Vector(0, 0, 0));
		Create Dummy Bot(Hero(Doomfist), Team 2, -1.000, Value In Array(Global Variable(postion), 5), Vector(0, 0, 0));
	}
}

rule("Rule 2")
{
	event
	{
		Ongoing - Each Player;
		Team 1;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
		Is Dummy Bot(Event Player) == False;
	}

	actions
	{
		Set Damage Received(Event Player, 10);
	}
}

rule("Rule 3")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Dummy Bot(Event Player) == True;
		Is Alive(Event Player) == True;
		Has Spawned(Event Player) == True;
		Hero Of(Event Player) == Hero(Doomfist);
	}

	actions
	{
		Set Facing(Event Player, Forward, To World);
		Set Status(Event Player, Null, Hacked, 9999);
	}
}

rule("Rule 4")
{
	event
	{
		Player Died;
		All;
		All;
	}

	conditions
	{
		Is Dummy Bot(Event Player) == True;
	}

	actions
	{
		Resurrect(Event Player);
	}
}

rule("Rule 3")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Dummy Bot(Event Player) == True;
		Is Alive(Event Player) == True;
		Has Spawned(Event Player) == True;
		Hero Of(Event Player) == Hero(Zenyatta);
	}

	actions
	{
		Start Facing(Event Player, Direction Towards(Event Player, Closest Player To(Event Player, Team 2)), 10000, To World,
			Direction and Turn Rate);
		Start Holding Button(Event Player, Primary Fire);
	}
}

rule("Rule 3")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Dummy Bot(Event Player) == True;
		Is Alive(Event Player) == True;
		Has Spawned(Event Player) == True;
		Hero Of(Event Player) == Hero(Brigitte);
	}

	actions
	{
		Start Facing(Event Player, Direction Towards(Event Player, Closest Player To(Event Player, Team 2)), 10000, To World,
			Direction and Turn Rate);
		Start Holding Button(Event Player, Secondary Fire);
	}
}

rule("Rule 7")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Count Of(Filtered Array(All Players(Team 1), And(Compare(Is Dummy Bot(Current Array Element), ==, True), Compare(Hero Of(
			Current Array Element), ==, Hero(Zenyatta))))) < 1;
	}

	actions
	{
		Create Dummy Bot(Hero(Zenyatta), Team 1, -1.000, Value In Array(Global Variable(postion), 6), Vector(0, 0, 0));
		Wait(0.250, Ignore Condition);
		Loop If Condition Is True;
	}
}

disabled rule("Rule 7")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Count Of(Filtered Array(All Players(Team 1), And(Compare(Is Dummy Bot(Current Array Element), ==, True), Compare(Hero Of(
			Current Array Element), ==, Hero(Brigitte))))) < 2;
	}

	actions
	{
		Create Dummy Bot(Hero(Brigitte), Team 1, -1.000, Value In Array(Global Variable(postion), 7), Vector(0, 0, 0));
		Create Dummy Bot(Hero(Brigitte), Team 1, -1.000, Value In Array(Global Variable(postion), 8), Vector(0, 0, 0));
		Wait(0.250, Ignore Condition);
		Loop If Condition Is True;
	}
}

rule("Rule 3")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Dummy Bot(Event Player) == True;
		Is Alive(Event Player) == True;
		Has Spawned(Event Player) == True;
		Hero Of(Event Player) == Hero(Doomfist);
		Slot Of(Event Player) == 3;
	}

	actions
	{
		Start Facing(Event Player, Direction Towards(Event Player, Value In Array(Filtered Array(Players On Hero(Hero(Brigitte), Team 1),
			Compare(Is Dummy Bot(Current Array Element), ==, True)), 0)), 10000, To World, Direction and Turn Rate);
	}
}

rule("Rule 3")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Dummy Bot(Event Player) == True;
		Is Alive(Event Player) == True;
		Has Spawned(Event Player) == True;
		Hero Of(Event Player) == Hero(Doomfist);
		Slot Of(Event Player) == 4;
	}

	actions
	{
		Start Facing(Event Player, Direction Towards(Event Player, Value In Array(Filtered Array(Players On Hero(Hero(Brigitte), Team 1),
			Compare(Is Dummy Bot(Current Array Element), ==, True)), 1)), 10000, To World, Direction and Turn Rate);
	}
}

rule("Rule 3")
{
	event
	{
		Player Died;
		Team 2;
		All;
	}

	actions
	{
		Teleport(Event Player, Value In Array(Global Variable(postion), Slot Of(Event Player)));
	}
}

rule("Rule 3")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Is Dummy Bot(Event Player) == True;
		Is Alive(Event Player) == True;
		Has Spawned(Event Player) == True;
		Hero Of(Event Player) == Hero(Doomfist);
		Or(Compare(Slot Of(Event Player), ==, 3), Compare(Slot Of(Event Player), ==, 4)) == True;
	}

	actions
	{
		Press Button(Event Player, Primary Fire);
		Wait(0.250, Ignore Condition);
		Loop;
	}
}

rule("Rule 13")
{
	event
	{
		Ongoing - Global;
	}

	actions
	{
		disabled Create HUD Text(All Players(All Teams), Custom String("你倒是跑啊", Null, Null, Null), Null, Null, Top, 0, Red, White, Red,
			Visible To and String, Default Visibility);
		disabled Create HUD Text(All Players(All Teams), Custom String("毫无还手之力", Null, Null, Null), Null, Null, Top, 0, Red, White, Green,
			Visible To and String, Default Visibility);
		disabled Create HUD Text(All Players(All Teams), Custom String("你还真以为能跑的掉", Null, Null, Null), Null, Null, Top, 0, Red, White, Sky Blue,
			Visible To and String, Default Visibility);
		disabled Create HUD Text(All Players(All Teams), Custom String("就这样... 死了？", Null, Null, Null), Null, Null, Top, 0, Red, White, Yellow,
			Visible To and String, Default Visibility);
		disabled Create HUD Text(All Players(All Teams), Custom String("上勾拳", Null, Null, Null), Null, Null, Top, 0, Red, White, Lime Green,
			Visible To and String, Default Visibility);
		Create HUD Text(All Players(All Teams), Custom String("迫害末日铁拳代码：F2YV6", Null, Null, Null), Null, Null, Left, 0, White, White,
			White, Visible To and String, Default Visibility);
	}
}